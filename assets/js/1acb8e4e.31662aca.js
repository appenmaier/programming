"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[1998],{5162:(e,a,l)=>{l.d(a,{Z:()=>r});var n=l(7294),t=l(6010);const s="tabItem_Ymn6";function r(e){let{children:a,hidden:l,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,t.Z)(s,r),hidden:l},a)}},5488:(e,a,l)=>{l.d(a,{Z:()=>p});var n=l(7462),t=l(7294),s=l(6010),r=l(2389),i=l(7392),u=l(7094),o=l(2466);const m="tabList__CuJ",c="tabItem_LNqP";function d(e){var a;const{lazy:l,block:r,defaultValue:d,values:p,groupId:h,className:g}=e,b=t.Children.map(e.children,(e=>{if((0,t.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=p??b.map((e=>{let{props:{value:a,label:l,attributes:n}}=e;return{value:a,label:l,attributes:n}})),k=(0,i.l)(f,((e,a)=>e.value===a.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===d?d:d??(null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)??b[0].props.value;if(null!==v&&!f.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:y}=(0,u.U)(),[D,x]=(0,t.useState)(v),N=[],{blockElementScrollPositionUntilNextRender:E}=(0,o.o5)();if(null!=h){const e=w[h];null!=e&&e!==D&&f.some((a=>a.value===e))&&x(e)}const P=e=>{const a=e.currentTarget,l=N.indexOf(a),n=f[l].value;n!==D&&(E(a),x(n),null!=h&&y(h,String(n)))},Z=e=>{var a;let l=null;switch(e.key){case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;l=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;l=N[a]??N[N.length-1];break}}null==(a=l)||a.focus()};return t.createElement("div",{className:(0,s.Z)("tabs-container",m)},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},g)},f.map((e=>{let{value:a,label:l,attributes:r}=e;return t.createElement("li",(0,n.Z)({role:"tab",tabIndex:D===a?0:-1,"aria-selected":D===a,key:a,ref:e=>N.push(e),onKeyDown:Z,onFocus:P,onClick:P},r,{className:(0,s.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":D===a})}),l??a)}))),l?(0,t.cloneElement)(b.filter((e=>e.props.value===D))[0],{className:"margin-top--md"}):t.createElement("div",{className:"margin-top--md"},b.map(((e,a)=>(0,t.cloneElement)(e,{key:a,hidden:e.props.value!==D})))))}function p(e){const a=(0,r.Z)();return t.createElement(d,(0,n.Z)({key:String(a)},e))}},7833:(e,a,l)=>{l.d(a,{Z:()=>u});var n=l(7294),t=l(5488),s=l(5162),r=l(9960),i=l(814);function u(e){let{pullRequest:a,branchSuffix:l}=e;return n.createElement(t.Z,null,n.createElement(s.Z,{value:"exercise",label:"Exercise",default:!0},n.createElement(i.Z,{language:"console"},`git switch exercises/${l}`)),n.createElement(s.Z,{value:"solution",label:"Solution"},n.createElement(i.Z,{language:"console"},`git switch solutions/${l}`)),n.createElement(s.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du in diesem"," ",n.createElement(r.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${a}/files?diff=split`},"PR#",a)))}},4388:(e,a,l)=>{l.r(a),l.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>u,toc:()=>m});var n=l(7462),t=(l(7294),l(3905)),s=l(7833);const r={title:"Polymorphie 04"},i=void 0,u={unversionedId:"exercises/polymorphie/polymorphie04",id:"exercises/polymorphie/polymorphie04",title:"Polymorphie 04",description:"- Passe die Klasse Dice aus \xdcbungsaufgabe",source:"@site/docs/exercises/polymorphie/polymorphie04.md",sourceDirName:"exercises/polymorphie",slug:"/exercises/polymorphie/polymorphie04",permalink:"/programming/exercises/polymorphie/polymorphie04",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/polymorphie/polymorphie04.md",tags:[],version:"current",frontMatter:{title:"Polymorphie 04"},sidebar:"exercisesSidebar",previous:{title:"Polymorphie 03",permalink:"/programming/exercises/polymorphie/polymorphie03"},next:{title:"Abstrakte und finale Klassen und Methoden",permalink:"/programming/exercises/abstract-and-final/"}},o={},m=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse HighValueDice",id:"hinweis-zur-klasse-highvaluedice",level:2},{value:"Hinweis zur Klasse LowValueDice",id:"hinweis-zur-klasse-lowvaluedice",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],c={toc:m};function d(e){let{components:a,...l}=e;return(0,t.kt)("wrapper",(0,n.Z)({},c,l,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"Dice")," aus \xdcbungsaufgabe\n",(0,t.kt)("a",{parentName:"li",href:"/programming/exercises/uml/class-diagrams02"},"ClassDiagrams02")," anhand des abgebildeten\nKlassendiagramms an und erstelle die Klassen ",(0,t.kt)("inlineCode",{parentName:"li"},"HighValueDice")," und\n",(0,t.kt)("inlineCode",{parentName:"li"},"LowValueDice")),(0,t.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"Player")," aus \xdcbungsaufgabe\n",(0,t.kt)("a",{parentName:"li",href:"/programming/exercises/uml/class-diagrams02"},"ClassDiagrams02")," anhand des abgebildeten\nKlassendiagramms an"),(0,t.kt)("li",{parentName:"ul"},"Passe die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"boolean move(Player)")," der Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"DiceGame")," aus\n\xdcbungsaufgabe ",(0,t.kt)("a",{parentName:"li",href:"/programming/exercises/uml/class-diagrams02"},"ClassDiagrams02")," so an, dass\njeder Spieler w\xe4hrend des Spiels einmal die M\xf6glichkeit hat, entweder nur\nmit 4-5-6-W\xfcrfeln oder 1-2-3-W\xfcrfeln zu w\xfcrfeln")),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/170884123-4f6ae3ad-612d-490c-94f3-1f9882b38002.png",alt:"image"})),(0,t.kt)("h2",{id:"hinweis-zur-klasse-highvaluedice"},"Hinweis zur Klasse HighValueDice"),(0,t.kt)("p",null,"Die rollTheDice-Methode soll nur 4er, 5er und 6er zur\xfcckgeben."),(0,t.kt)("h2",{id:"hinweis-zur-klasse-lowvaluedice"},"Hinweis zur Klasse LowValueDice"),(0,t.kt)("p",null,"Die rollTheDice-Methode soll nur 1er, 2er und 3er zur\xfcckgeben."),(0,t.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-console"},"Hans hat aktuell 0 Punkte\nHans, m\xf6chtest Du einmalig Spezialw\xfcrfel verwenden (true, false)?: true\nHans, welche Spezialw\xfcrfel m\xf6chtest Du verwenden (1=4-5-6-W\xfcrfel, 2=1-2-3-W\xfcrfel)?: 1\nHans, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nHans hat 12 Punkte\nHans hat insgesamt 12 Punkte\n\u2026\nLisa hat aktuell 46 Punkte\nLisa, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nLisa hat 12 Punkte\nLisa hat insgesamt 58 Punkte\nLisa hat verloren\nDer Sieger hei\xdft Hans und hat 49 Punkte\n")),(0,t.kt)(s.Z,{pullRequest:"44",branchSuffix:"polymorphy/04",mdxType:"Exercise"}))}d.isMDXComponent=!0}}]);