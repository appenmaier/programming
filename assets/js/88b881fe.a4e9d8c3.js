"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[9597],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>c});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=d(r),c=i,g=u["".concat(s,".").concat(c)]||u[c]||p[c]||a;return r?n.createElement(g,o(o({ref:t},m),{},{components:r})):n.createElement(g,o({ref:t},m))}));function c(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var d=2;d<a;d++)o[d]=r[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1135:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var n=r(7462),i=(r(7294),r(3905));const a={title:"Fast Food",description:"",tags:["oo","enumerations","inheritance","polymorphy","io-streams"]},o=void 0,l={unversionedId:"additional-material/exam-exercises1/fast-food",id:"additional-material/exam-exercises1/fast-food",title:"Fast Food",description:"",source:"@site/docs/additional-material/exam-exercises1/fast-food.md",sourceDirName:"additional-material/exam-exercises1",slug:"/additional-material/exam-exercises1/fast-food",permalink:"/programming/additional-material/exam-exercises1/fast-food",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/additional-material/exam-exercises1/fast-food.md",tags:[{label:"oo",permalink:"/programming/tags/oo"},{label:"enumerations",permalink:"/programming/tags/enumerations"},{label:"inheritance",permalink:"/programming/tags/inheritance"},{label:"polymorphy",permalink:"/programming/tags/polymorphy"},{label:"io-streams",permalink:"/programming/tags/io-streams"}],version:"current",frontMatter:{title:"Fast Food",description:"",tags:["oo","enumerations","inheritance","polymorphy","io-streams"]},sidebar:"additionalMaterialSidebar",previous:{title:"W\xfcrfelspiele",permalink:"/programming/additional-material/exam-exercises1/dice-games"},next:{title:"Geschenkesack",permalink:"/programming/additional-material/exam-exercises1/gift-bag"}},s={},d=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse FastFood",id:"hinweise-zur-klasse-fastfood",level:2},{value:"Hinweise zur Klasse FastFoodShop",id:"hinweise-zur-klasse-fastfoodshop",level:2},{value:"Hinweise zur Klasse FoodHelper",id:"hinweise-zur-klasse-foodhelper",level:2},{value:"Hinweis",id:"hinweis",level:2}],m={toc:d};function p(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse. So nicht anders angegeben, sollen Konstruktoren, Setter, Getter und die Object-Methoden wie \xfcblich implementiert werden."),(0,i.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/208616381-8807acc4-6879-4e47-ac2b-c97a70a70069.png",alt:"image"})),(0,i.kt)("h2",{id:"hinweise-zur-klasse-fastfood"},"Hinweise zur Klasse FastFood"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"void addRating(rating: int)")," soll den Bewertungen (",(0,i.kt)("inlineCode",{parentName:"li"},"ratings"),") die eingehende Bewertung hinzuf\xfcgen"),(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"double getAverageRating()")," soll die durchschnittliche Bewertung zur\xfcckgeben")),(0,i.kt)("h2",{id:"hinweise-zur-klasse-fastfoodshop"},"Hinweise zur Klasse FastFoodShop"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Der Konstruktor soll die Fast-Food-Liste (",(0,i.kt)("inlineCode",{parentName:"li"},"fastFood"),") mit Hilfe der Klasse ",(0,i.kt)("inlineCode",{parentName:"li"},"FoodHelper")," initialisieren"),(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"void rateFastFood(fastFood: FastFood, rating: int)")," soll dem eingehenden Fast Food die eingehende Bewertung hinzuf\xfcgen"),(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"Burger getBestRatedBurger()")," soll den Burger mit der h\xf6chsten Bewertung zur\xfcckgeben")),(0,i.kt)("h2",{id:"hinweise-zur-klasse-foodhelper"},"Hinweise zur Klasse FoodHelper"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"ArrayList<Food> readFood(file: File)")," soll alle Lebensmittel der eingehenden Datei zur\xfcckgeben"),(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"void printFood(food: ArrayList<Food>)")," soll die eingehenden Lebensmittel auf der Konsole ausgeben"),(0,i.kt)("li",{parentName:"ul"},"Die Methode ",(0,i.kt)("inlineCode",{parentName:"li"},"FoodCategory getFoodCategoryByDescription(description: String)")," soll die Lebensmittelkategorie zur eingehenden Beschreibung zur\xfcckgeben")),(0,i.kt)("h2",{id:"hinweis"},"Hinweis"),(0,i.kt)("p",null,"Burger sollen entweder der Lebensmittelkategorie ",(0,i.kt)("em",{parentName:"p"},"Gem\xfcse")," oder der Lebensmittelkategorie ",(0,i.kt)("em",{parentName:"p"},"Fleisch")," zugeordnet werden."))}p.isMDXComponent=!0}}]);