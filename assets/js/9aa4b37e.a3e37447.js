"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[8711],{5162:(e,a,n)=>{n.d(a,{Z:()=>s});var t=n(7294),l=n(6010);const r="tabItem_Ymn6";function s(e){let{children:a,hidden:n,className:s}=e;return t.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,s),hidden:n},a)}},5488:(e,a,n)=>{n.d(a,{Z:()=>d});var t=n(7462),l=n(7294),r=n(6010),s=n(2389),i=n(7392),o=n(7094),u=n(2466);const m="tabList__CuJ",c="tabItem_LNqP";function p(e){var a;const{lazy:n,block:s,defaultValue:p,values:d,groupId:h,className:b}=e,g=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=d??g.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),v=(0,i.l)(f,((e,a)=>e.value===a.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===p?p:p??(null==(a=g.find((e=>e.props.default)))?void 0:a.props.value)??g[0].props.value;if(null!==k&&!f.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:N,setTabGroupChoices:E}=(0,o.U)(),[T,x]=(0,l.useState)(k),w=[],{blockElementScrollPositionUntilNextRender:Z}=(0,u.o5)();if(null!=h){const e=N[h];null!=e&&e!==T&&f.some((a=>a.value===e))&&x(e)}const y=e=>{const a=e.currentTarget,n=w.indexOf(a),t=f[n].value;t!==T&&(Z(a),x(t),null!=h&&E(h,String(t)))},z=e=>{var a;let n=null;switch(e.key){case"ArrowRight":{const a=w.indexOf(e.currentTarget)+1;n=w[a]??w[0];break}case"ArrowLeft":{const a=w.indexOf(e.currentTarget)-1;n=w[a]??w[w.length-1];break}}null==(a=n)||a.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},b)},f.map((e=>{let{value:a,label:n,attributes:s}=e;return l.createElement("li",(0,t.Z)({role:"tab",tabIndex:T===a?0:-1,"aria-selected":T===a,key:a,ref:e=>w.push(e),onKeyDown:z,onFocus:y,onClick:y},s,{className:(0,r.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":T===a})}),n??a)}))),n?(0,l.cloneElement)(g.filter((e=>e.props.value===T))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},g.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==T})))))}function d(e){const a=(0,s.Z)();return l.createElement(p,(0,t.Z)({key:String(a)},e))}},7833:(e,a,n)=>{n.d(a,{Z:()=>o});var t=n(7294),l=n(5488),r=n(5162),s=n(9960),i=n(814);function o(e){let{pullRequest:a,branchSuffix:n}=e;return t.createElement(l.Z,null,t.createElement(r.Z,{value:"exercise",label:"Exercise",default:!0},t.createElement(i.Z,{language:"console"},`git switch exercises/${n}`)),t.createElement(r.Z,{value:"solution",label:"Solution"},t.createElement(i.Z,{language:"console"},`git switch solutions/${n}`)),t.createElement(r.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du in diesem"," ",t.createElement(s.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${a}/files?diff=split`},"PR#",a)))}},3128:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>m});var t=n(7462),l=(n(7294),n(3905)),r=n(7833);const s={title:"Maps 01"},i=void 0,o={unversionedId:"exercises/maps/maps01",id:"exercises/maps/maps01",title:"Maps 01",description:"- Erstelle die Klassen Person, TelephoneNumber und TelephoneBook anhand",source:"@site/docs/exercises/maps/maps01.md",sourceDirName:"exercises/maps",slug:"/exercises/maps/maps01",permalink:"/programming/exercises/maps/maps01",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/maps/maps01.md",tags:[],version:"current",frontMatter:{title:"Maps 01"},sidebar:"exercisesSidebar",previous:{title:"Assoziativspeicher (Maps)",permalink:"/programming/exercises/maps/"},next:{title:"Die Java Stream API",permalink:"/programming/exercises/java-stream-api/"}},u={},m=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse TelephoneBook",id:"hinweise-zur-klasse-telephonebook",level:2}],c={toc:m};function p(e){let{components:a,...n}=e;return(0,l.kt)("wrapper",(0,t.Z)({},c,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Erstelle die Klassen ",(0,l.kt)("inlineCode",{parentName:"li"},"Person"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"TelephoneNumber")," und ",(0,l.kt)("inlineCode",{parentName:"li"},"TelephoneBook")," anhand\ndes abgebildeten Klassendiagramms"),(0,l.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche ein Telefonbuch mit mehreren\nEintr\xe4gen erzeugt und zu eingegebenen Namen die dazugeh\xf6rigen Telefonnummern\nauf der Konsole ausgibt")),(0,l.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/181770698-8ea1cbfc-0a61-4efb-99f4-8c068b3a8ff9.png",alt:"image"})),(0,l.kt)("h2",{id:"hinweise-zur-klasse-telephonebook"},"Hinweise zur Klasse TelephoneBook"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void addEntry(Person, TelephoneNumber)")," soll einen Eintrag im\nTelefonbuch anlegen"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"TelephoneNumber getTelephoneNumberByName(String)")," soll die\nTelefonnummer zum eingehenden Namen zur\xfcckgeben")),(0,l.kt)(r.Z,{pullRequest:"59",branchSuffix:"maps/01",mdxType:"Exercise"}))}p.isMDXComponent=!0}}]);