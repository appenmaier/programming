"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[5511],{5162:(e,a,n)=>{n.d(a,{Z:()=>s});var t=n(7294),l=n(6010);const r="tabItem_Ymn6";function s(e){let{children:a,hidden:n,className:s}=e;return t.createElement("div",{role:"tabpanel",className:(0,l.Z)(r,s),hidden:n},a)}},5488:(e,a,n)=>{n.d(a,{Z:()=>p});var t=n(7462),l=n(7294),r=n(6010),s=n(2389),i=n(7392),u=n(7094),o=n(2466);const m="tabList__CuJ",d="tabItem_LNqP";function c(e){var a;const{lazy:n,block:s,defaultValue:c,values:p,groupId:g,className:b}=e,h=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=p??h.map((e=>{let{props:{value:a,label:n,attributes:t}}=e;return{value:a,label:n,attributes:t}})),f=(0,i.l)(k,((e,a)=>e.value===a.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const v=null===c?c:c??(null==(a=h.find((e=>e.props.default)))?void 0:a.props.value)??h[0].props.value;if(null!==v&&!k.some((e=>e.value===v)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${v}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:N}=(0,u.U)(),[C,x]=(0,l.useState)(v),E=[],{blockElementScrollPositionUntilNextRender:Z}=(0,o.o5)();if(null!=g){const e=w[g];null!=e&&e!==C&&k.some((a=>a.value===e))&&x(e)}const K=e=>{const a=e.currentTarget,n=E.indexOf(a),t=k[n].value;t!==C&&(Z(a),x(t),null!=g&&N(g,String(t)))},z=e=>{var a;let n=null;switch(e.key){case"ArrowRight":{const a=E.indexOf(e.currentTarget)+1;n=E[a]??E[0];break}case"ArrowLeft":{const a=E.indexOf(e.currentTarget)-1;n=E[a]??E[E.length-1];break}}null==(a=n)||a.focus()};return l.createElement("div",{className:(0,r.Z)("tabs-container",m)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},b)},k.map((e=>{let{value:a,label:n,attributes:s}=e;return l.createElement("li",(0,t.Z)({role:"tab",tabIndex:C===a?0:-1,"aria-selected":C===a,key:a,ref:e=>E.push(e),onKeyDown:z,onFocus:K,onClick:K},s,{className:(0,r.Z)("tabs__item",d,null==s?void 0:s.className,{"tabs__item--active":C===a})}),n??a)}))),n?(0,l.cloneElement)(h.filter((e=>e.props.value===C))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},h.map(((e,a)=>(0,l.cloneElement)(e,{key:a,hidden:e.props.value!==C})))))}function p(e){const a=(0,s.Z)();return l.createElement(c,(0,t.Z)({key:String(a)},e))}},7833:(e,a,n)=>{n.d(a,{Z:()=>u});var t=n(7294),l=n(5488),r=n(5162),s=n(9960),i=n(814);function u(e){let{pullRequest:a,branchSuffix:n}=e;return t.createElement(l.Z,null,t.createElement(r.Z,{value:"exercise",label:"Exercise",default:!0},t.createElement(i.Z,{language:"console"},`git switch exercises/${n}`)),t.createElement(r.Z,{value:"solution",label:"Solution"},t.createElement(i.Z,{language:"console"},`git switch solutions/${n}`)),t.createElement(r.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du in diesem"," ",t.createElement(s.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${a}/files?diff=split`},"PR#",a)))}},6266:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>u,toc:()=>m});var t=n(7462),l=(n(7294),n(3905)),r=n(7833);const s={title:"Class Diagrams 03"},i=void 0,u={unversionedId:"exercises/uml/class-diagrams03",id:"exercises/uml/class-diagrams03",title:"Class Diagrams 03",description:"- Passe die Klasse Creature aus \xdcbungsaufgabe OO06 anhand",source:"@site/docs/exercises/uml/class-diagrams03.md",sourceDirName:"exercises/uml",slug:"/exercises/uml/class-diagrams03",permalink:"/programming/exercises/uml/class-diagrams03",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/uml/class-diagrams03.md",tags:[],version:"current",frontMatter:{title:"Class Diagrams 03"},sidebar:"exercisesSidebar",previous:{title:"Class Diagrams 02",permalink:"/programming/exercises/uml/class-diagrams02"},next:{title:"Class Diagrams 04",permalink:"/programming/exercises/uml/class-diagrams04"}},o={},m=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse Creature",id:"hinweise-zur-klasse-creature",level:2},{value:"Hinweise zur Klasse CreatureGame",id:"hinweise-zur-klasse-creaturegame",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],d={toc:m};function c(e){let{components:a,...n}=e;return(0,l.kt)("wrapper",(0,t.Z)({},d,n,{components:a,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,l.kt)("inlineCode",{parentName:"li"},"Creature")," aus \xdcbungsaufgabe ",(0,l.kt)("a",{parentName:"li",href:"/programming/exercises/oo/oo06"},"OO06")," anhand\ndes abgebildeten Klassendiagramms an und Erstelle die Klasse ",(0,l.kt)("inlineCode",{parentName:"li"},"CreatureGame")),(0,l.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche einen Kampf zwischen zwei Kreaturen\nsimuliert")),(0,l.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/177834012-3acc46b6-fd7d-4ed4-b82a-a965de5abb0d.png",alt:"image"})),(0,l.kt)("h2",{id:"hinweise-zur-klasse-creature"},"Hinweise zur Klasse Creature"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Passe die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean attack(Creature)")," so an, dass der R\xfcckgabewert\n",(0,l.kt)("inlineCode",{parentName:"li"},"true")," ist, wenn die Lebenspunkte der angegriffenen Kreatur kleiner gleich\nNull sind, bzw. ",(0,l.kt)("inlineCode",{parentName:"li"},"false"),", wenn nicht"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,l.kt)("h2",{id:"hinweise-zur-klasse-creaturegame"},"Hinweise zur Klasse CreatureGame"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void simulateFight()"),' soll die beiden Kreaturen sich so lange\ngegenseitig angreifen lassen, bis eine der Kreaturen "stirbt"'),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean move(Creature, Creature)")," soll eine Kreatur die andere\nangreifen lassen und den R\xfcckgabewert ",(0,l.kt)("inlineCode",{parentName:"li"},"true"),' liefern, wenn die angegriffene\nKreatur "stirbt", bzw. ',(0,l.kt)("inlineCode",{parentName:"li"},"false"),", wenn nicht"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,l.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-console"},"Runde 1: Zombie (2 - 10), Vampir (4 - 6)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir hat noch 4 Lebenspunkte\nVampir greift Zombie an und erzielt 4 Schaden\nZombie hat noch 6 Lebenspunkte\n\u2026\nRunde 3: Zombie (2 - 2), Vampir (4 - 2)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir wurde vernichtet\n")),(0,l.kt)(r.Z,{pullRequest:"38",branchSuffix:"class-diagrams/03",mdxType:"Exercise"}))}c.isMDXComponent=!0}}]);