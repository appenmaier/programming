"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[9927],{3905:(e,a,n)=>{n.d(a,{Zo:()=>m,kt:()=>g});var r=n(7294);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function s(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?s(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function l(e,a){if(null==e)return{};var n,r,t=function(e,a){if(null==e)return{};var n,r,t={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var u=r.createContext({}),o=function(e){var a=r.useContext(u),n=a;return e&&(n="function"==typeof e?e(a):i(i({},a),e)),n},m=function(e){var a=o(e.components);return r.createElement(u.Provider,{value:a},e.children)},c={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef((function(e,a){var n=e.components,t=e.mdxType,s=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=o(n),g=t,p=d["".concat(u,".").concat(g)]||d[g]||c[g]||s;return n?r.createElement(p,i(i({ref:a},m),{},{components:n})):r.createElement(p,i({ref:a},m))}));function g(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=n.length,i=new Array(s);i[0]=d;var l={};for(var u in a)hasOwnProperty.call(a,u)&&(l[u]=a[u]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var o=2;o<s;o++)i[o]=n[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7760:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>u,contentTitle:()=>i,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var r=n(7462),t=(n(7294),n(3905));const s={title:"\xdcbungsaufgabe ClassDiagrams02"},i=void 0,l={unversionedId:"exercises/uml/class-diagrams02",id:"exercises/uml/class-diagrams02",title:"\xdcbungsaufgabe ClassDiagrams02",description:"- Passe die Klasse Player aus \xdcbungsaufgabe ClassDiagrams01 anhand des abgebildeten Klassendiagramms an und erstelle die Klasse DiceGame",source:"@site/docs/exercises/uml/class-diagrams02.md",sourceDirName:"exercises/uml",slug:"/exercises/uml/class-diagrams02",permalink:"/programming/docs/exercises/uml/class-diagrams02",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/uml/class-diagrams02.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe ClassDiagrams02"},sidebar:"tutorialSidebar",previous:{title:"\xdcbungsaufgabe ClassDiagrams01",permalink:"/programming/docs/exercises/uml/class-diagrams01"},next:{title:"\xdcbungsaufgabe ClassDiagrams03",permalink:"/programming/docs/exercises/uml/class-diagrams03"}},u={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse Player",id:"hinweis-zur-klasse-player",level:2},{value:"Hinweise zur Klasse DiceGame",id:"hinweise-zur-klasse-dicegame",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],m={toc:o};function c(e){let{components:a,...n}=e;return(0,t.kt)("wrapper",(0,r.Z)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"Player")," aus \xdcbungsaufgabe ",(0,t.kt)("a",{parentName:"li",href:"/programming/docs/exercises/uml/class-diagrams01"},"ClassDiagrams01")," anhand des abgebildeten Klassendiagramms an und erstelle die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"DiceGame")),(0,t.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche beliebig vielen Spielern erm\xf6glicht, abwechselnd mit 3 W\xfcrfeln zu w\xfcrfeln. F\xfcr jedes gew\xfcrfelte Auge bekommt der jeweilige Spieler einen Punkt. Ziel des Spieles ist es, so nah wie m\xf6glich an 50 Punkte heranzukommen,\nohne allerdings die 50 Punkte zu \xfcberschreiten")),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/170923102-0f58b56b-b053-4571-a239-942529110912.png",alt:"image"})),(0,t.kt)("h2",{id:"hinweis-zur-klasse-player"},"Hinweis zur Klasse Player"),(0,t.kt)("p",null,"Passe den Konstruktor so an, dass auch weiterhin alle Attribute initialisiert werden."),(0,t.kt)("h2",{id:"hinweise-zur-klasse-dicegame"},"Hinweise zur Klasse DiceGame"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void start()")," soll die Spieler abwechselnd einen Spielzug machen lassen und am Ende den Sieger des Spiels auf der Konsole ausgeben"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void move(Player)")," soll es dem Spieler erm\xf6glichen zu w\xfcrfeln, bzw. seinen Spielzug zu beenden")),(0,t.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-markdown"},"Hans hat aktuell 0 Punkte\nHans, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nHans hat 8 Punkte\nHans hat insgesamt 8 Punkte\n\u2026\nHans hat aktuell 43 Punkte\nHans, m\xf6chtest Du w\xfcrfeln (true, false)?: false\nLisa hat aktuell 41 Punkte\nLisa, m\xf6chtest Du w\xfcrfeln (true, false)?: true\nLisa hat 10 Punkte\nLisa hat insgesamt 51 Punkte\nLisa hat verloren\nDer Sieger hei\xdft Hans und hat 43 Punkte\n")))}c.isMDXComponent=!0}}]);