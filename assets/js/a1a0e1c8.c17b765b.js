"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[2023],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>d});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function s(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=n.createContext({}),c=function(e){var r=n.useContext(o),t=r;return e&&(t="function"==typeof e?e(r):s(s({},r),e)),t},u=function(e){var r=c(e.components);return n.createElement(o.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=c(t),d=a,g=m["".concat(o,".").concat(d)]||m[d]||p[d]||i;return t?n.createElement(g,s(s({ref:r},u),{},{components:t})):n.createElement(g,s({ref:r},u))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var l={};for(var o in r)hasOwnProperty.call(r,o)&&(l[o]=r[o]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var c=2;c<i;c++)s[c]=t[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2507:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>o,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=t(7462),a=(t(7294),t(3905));const i={title:"\xdcbungsaufgabe Interfaces01"},s=void 0,l={unversionedId:"exercises/interfaces/interfaces01",id:"exercises/interfaces/interfaces01",title:"\xdcbungsaufgabe Interfaces01",description:"- Passe die Klasse Rental aus \xdcbungsaufgabe Polymorphie03 anhand des abgebildeten Klassendiagramms an und erstelle die Klasse TravelAgency sowie die Schnittstelle Partner",source:"@site/docs/exercises/interfaces/interfaces01.md",sourceDirName:"exercises/interfaces",slug:"/exercises/interfaces/interfaces01",permalink:"/programming/exercises/interfaces/interfaces01",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/interfaces/interfaces01.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe Interfaces01"},sidebar:"exercisesSidebar",previous:{title:"Schnittstellen (Interfaces)",permalink:"/programming/exercises/interfaces/"},next:{title:"Komparatoren",permalink:"/programming/exercises/comparators/"}},o={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse TravelAgency",id:"hinweise-zur-klasse-travelagency",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],u={toc:c};function p(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,a.kt)("inlineCode",{parentName:"li"},"Rental")," aus \xdcbungsaufgabe ",(0,a.kt)("a",{parentName:"li",href:"../polymorphie/polymorphie03"},"Polymorphie03")," anhand des abgebildeten Klassendiagramms an und erstelle die Klasse ",(0,a.kt)("inlineCode",{parentName:"li"},"TravelAgency")," sowie die Schnittstelle ",(0,a.kt)("inlineCode",{parentName:"li"},"Partner")),(0,a.kt)("li",{parentName:"ul"},"Passe die ausf\xfchrbare Klasse aus \xdcbungsaufgabe ",(0,a.kt)("a",{parentName:"li",href:"../polymorphie/polymorphie03"},"Polymorphie03")," so an, dass ein Reiseb\xfcro erzeugt wird, dass diesem die Autovermietung hinzugef\xfcgt wird und dass alle Attribute des Reiseb\xfcros ausgegeben werden")),(0,a.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/170883385-dbd51dae-eeba-49f9-a6ca-a8714f1b994d.png",alt:"image"})),(0,a.kt)("h2",{id:"hinweise-zur-klasse-travelagency"},"Hinweise zur Klasse TravelAgency"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addPartner(Partner)")," soll dem Reiseb\xfcro einen Partner hinzuf\xfcgen"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,a.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"Reiseb\xfcro Schmidt\nUnsere Partner:\nFahrzeugvermietung M\xfcller\nUnsere Fahrzeuge:\nPorsche 911 (Elektro, 2 Sitzpl\xe4tze)\nMAN TGX (Diesel, 20t)\nOpel Zafira Life (Diesel, 7 Sitzpl\xe4tze)\n")))}p.isMDXComponent=!0}}]);