"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[7705],{5162:(e,t,a)=>{a.d(t,{Z:()=>l});var r=a(7294),n=a(6010);const i="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(i,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>p});var r=a(7462),n=a(7294),i=a(6010),l=a(2389),s=a(7392),o=a(7094),u=a(2466);const c="tabList__CuJ",d="tabItem_LNqP";function m(e){var t;const{lazy:a,block:l,defaultValue:m,values:p,groupId:h,className:g}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??b.map((e=>{let{props:{value:t,label:a,attributes:r}}=e;return{value:t,label:a,attributes:r}})),f=(0,s.l)(v,((e,t)=>e.value===t.value));if(f.length>0)throw new Error(`Docusaurus error: Duplicate values "${f.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==k&&!v.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:w,setTabGroupChoices:x}=(0,o.U)(),[E,N]=(0,n.useState)(k),z=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.o5)();if(null!=h){const e=w[h];null!=e&&e!==E&&v.some((t=>t.value===e))&&N(e)}const Z=e=>{const t=e.currentTarget,a=z.indexOf(t),r=v[a].value;r!==E&&(C(t),N(r),null!=h&&x(h,String(r)))},y=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=z.indexOf(e.currentTarget)+1;a=z[t]??z[0];break}case"ArrowLeft":{const t=z.indexOf(e.currentTarget)-1;a=z[t]??z[z.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,i.Z)("tabs-container",c)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},g)},v.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:e=>z.push(e),onKeyDown:y,onFocus:Z,onClick:Z},l,{className:(0,i.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":E===t})}),a??t)}))),a?(0,n.cloneElement)(b.filter((e=>e.props.value===E))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==E})))))}function p(e){const t=(0,l.Z)();return n.createElement(m,(0,r.Z)({key:String(t)},e))}},7833:(e,t,a)=>{a.d(t,{Z:()=>o});var r=a(7294),n=a(5488),i=a(5162),l=a(9960),s=a(814);function o(e){let{pullRequest:t,branchSuffix:a}=e;return r.createElement(n.Z,null,r.createElement(i.Z,{value:"exercise",label:"Exercise",default:!0},r.createElement(s.Z,{language:"console"},`git switch exercises/${a}`),r.createElement(l.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${a}/Exercise.java`},r.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),r.createElement(i.Z,{value:"solution",label:"Solution"},r.createElement(s.Z,{language:"console"},`git switch solutions/${a}`),r.createElement(l.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${a}/Exercise.java`},r.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),r.createElement(i.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request "," ",r.createElement(l.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${t}/files?diff=split`},"PR#",t)))}},9081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var r=a(7462),n=(a(7294),a(3905)),i=a(7833);const l={title:"Comparators01",description:""},s=void 0,o={unversionedId:"exercises/comparators/comparators01",id:"exercises/comparators/comparators01",title:"Comparators01",description:"",source:"@site/docs/exercises/comparators/comparators01.md",sourceDirName:"exercises/comparators",slug:"/exercises/comparators/comparators01",permalink:"/programming/exercises/comparators/comparators01",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/comparators/comparators01.md",tags:[],version:"current",frontMatter:{title:"Comparators01",description:""},sidebar:"exercisesSidebar",previous:{title:"Komparatoren",permalink:"/programming/exercises/comparators/"},next:{title:"Comparators02",permalink:"/programming/exercises/comparators/comparators02"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse Coordinate",id:"hinweise-zur-klasse-coordinate",level:2},{value:"Hinweis",id:"hinweis",level:2}],d={toc:c};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Erstelle die Klasse ",(0,n.kt)("inlineCode",{parentName:"li"},"Coordinate")," anhand des abgebildeten Klassendiagramms"),(0,n.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche eine Koordinatenliste mit mehreren\nKoordinaten erzeugt, diese sortiert und anschlie\xdfend auf der Konsole ausgibt")),(0,n.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/208057201-8df21169-1cc8-4506-9d4e-45ca182d55b3.png",alt:"image"})),(0,n.kt)("h2",{id:"hinweise-zur-klasse-coordinate"},"Hinweise zur Klasse Coordinate"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"double getDistanceToOriginPoint()")," soll die Distanz der\nKoordinate zum Nullpunkt zur\xfcckgeben"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"int compareTo(o: Coordinate)")," soll die Koordinate mit der\neingehenden Koordinate anhand ihrer jeweiligen Distanz zum Nullpunkt\nvergleichen. Ist die Distanz der Koordinate zum Nullpunkt kleiner als bzw.\ngr\xf6\xdfer als bzw. gleich die der eingehenden\nKoordinate, soll der Wert 1 bzw. -1 bzw. 0 zur\xfcckgegeben werden")),(0,n.kt)("h2",{id:"hinweis"},"Hinweis"),(0,n.kt)("p",null,"Die statische Methode ",(0,n.kt)("inlineCode",{parentName:"p"},"double hypot(x: double, y: double)")," der Klasse ",(0,n.kt)("inlineCode",{parentName:"p"},"Math"),"\nberechnet die Hypotenuse zum eingehenden X- und Y-Wert."),(0,n.kt)(i.Z,{pullRequest:"47",branchSuffix:"comparators/01",mdxType:"Exercise"}))}m.isMDXComponent=!0}}]);