"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[5511],{3905:(e,a,r)=>{r.d(a,{Zo:()=>m,kt:()=>p});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function i(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?i(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var u=n.createContext({}),o=function(e){var a=n.useContext(u),r=a;return e&&(r="function"==typeof e?e(a):s(s({},a),e)),r},m=function(e){var a=o(e.components);return n.createElement(u.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},c=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,i=e.originalType,u=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=o(r),p=t,g=c["".concat(u,".").concat(p)]||c[p]||d[p]||i;return r?n.createElement(g,s(s({ref:a},m),{},{components:r})):n.createElement(g,s({ref:a},m))}));function p(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=r.length,s=new Array(i);s[0]=c;var l={};for(var u in a)hasOwnProperty.call(a,u)&&(l[u]=a[u]);l.originalType=e,l.mdxType="string"==typeof e?e:t,s[1]=l;for(var o=2;o<i;o++)s[o]=r[o];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},6266:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>u,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>o});var n=r(7462),t=(r(7294),r(3905));const i={title:"\xdcbungsaufgabe ClassDiagrams03"},s=void 0,l={unversionedId:"exercises/uml/class-diagrams03",id:"exercises/uml/class-diagrams03",title:"\xdcbungsaufgabe ClassDiagrams03",description:"- Passe die Klasse Creature aus \xdcbungsaufgabe OO06 anhand des abgebildeten Klassendiagramms an und Erstelle die Klasse CreatureGame",source:"@site/docs/exercises/uml/class-diagrams03.md",sourceDirName:"exercises/uml",slug:"/exercises/uml/class-diagrams03",permalink:"/programming/docs/exercises/uml/class-diagrams03",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/uml/class-diagrams03.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe ClassDiagrams03"},sidebar:"tutorialSidebar",previous:{title:"\xdcbungsaufgabe ClassDiagrams02",permalink:"/programming/docs/exercises/uml/class-diagrams02"},next:{title:"\xdcbungsaufgabe ClassDiagrams04",permalink:"/programming/docs/exercises/uml/class-diagrams04"}},u={},o=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse Creature",id:"hinweise-zur-klasse-creature",level:2},{value:"Hinweise zur Klasse CreatureGame",id:"hinweise-zur-klasse-creaturegame",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],m={toc:o};function d(e){let{components:a,...r}=e;return(0,t.kt)("wrapper",(0,n.Z)({},m,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"Creature")," aus \xdcbungsaufgabe ",(0,t.kt)("a",{parentName:"li",href:"/programming/docs/exercises/oo/oo06"},"OO06")," anhand des abgebildeten Klassendiagramms an und Erstelle die Klasse ",(0,t.kt)("inlineCode",{parentName:"li"},"CreatureGame")),(0,t.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche einen Kampf zwischen zwei Kreaturen simuliert")),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/177834012-3acc46b6-fd7d-4ed4-b82a-a965de5abb0d.png",alt:"image"})),(0,t.kt)("h2",{id:"hinweise-zur-klasse-creature"},"Hinweise zur Klasse Creature"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Passe die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"boolean attack(Creature)")," so an, dass der R\xfcckgabewert ",(0,t.kt)("inlineCode",{parentName:"li"},"true")," ist, wenn die Lebenspunkte der angegriffenen Kreatur kleiner gleich Null sind, bzw. ",(0,t.kt)("inlineCode",{parentName:"li"},"false"),", wenn nicht"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,t.kt)("h2",{id:"hinweise-zur-klasse-creaturegame"},"Hinweise zur Klasse CreatureGame"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void simulateFight()"),' soll die beiden Kreaturen sich so lange gegenseitig angreifen lassen, bis eine der Kreaturen "stirbt"'),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"boolean move(Creature, Creature)")," soll eine Kreatur die andere angreifen lassen und den R\xfcckgabewert ",(0,t.kt)("inlineCode",{parentName:"li"},"true"),' liefern, wenn die angegriffene Kreatur "stirbt", bzw. ',(0,t.kt)("inlineCode",{parentName:"li"},"false"),", wenn nicht"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,t.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-markdown"},"Runde 1: Zombie (2 - 10), Vampir (4 - 6)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir hat noch 4 Lebenspunkte\nVampir greift Zombie an und erzielt 4 Schaden\nZombie hat noch 6 Lebenspunkte\n\u2026\nRunde 3: Zombie (2 - 2), Vampir (4 - 2)\nZombie greift Vampir an und erzielt 2 Schaden\nVampir wurde vernichtet\n")))}d.isMDXComponent=!0}}]);