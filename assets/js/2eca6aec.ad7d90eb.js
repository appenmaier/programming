"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[8595],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),d=p(r),u=i,f=d["".concat(s,".").concat(u)]||d[u]||c[u]||a;return r?n.createElement(f,l(l({ref:t},m),{},{components:r})):n.createElement(f,l({ref:t},m))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3823:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={title:"Stellenangebot",description:"",tags:["inheritance","polymorphy","io-streams"]},l=void 0,o={unversionedId:"additional-material/exam-exercises2/job-offer",id:"additional-material/exam-exercises2/job-offer",title:"Stellenangebot",description:"",source:"@site/docs/additional-material/exam-exercises2/job-offer.md",sourceDirName:"additional-material/exam-exercises2",slug:"/additional-material/exam-exercises2/job-offer",permalink:"/programming/additional-material/exam-exercises2/job-offer",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/additional-material/exam-exercises2/job-offer.md",tags:[{label:"inheritance",permalink:"/programming/tags/inheritance"},{label:"polymorphy",permalink:"/programming/tags/polymorphy"},{label:"io-streams",permalink:"/programming/tags/io-streams"}],version:"current",frontMatter:{title:"Stellenangebot",description:"",tags:["inheritance","polymorphy","io-streams"]},sidebar:"additionalMaterialSidebar",previous:{title:"Personalverwaltung",permalink:"/programming/additional-material/exam-exercises2/human-resources"},next:{title:"Lego-Baustein",permalink:"/programming/additional-material/exam-exercises2/lego-brick"}},s={},p=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Allgemeine Hinweise",id:"allgemeine-hinweise",level:2},{value:"Hinweis zur Klasse Applicant",id:"hinweis-zur-klasse-applicant",level:2},{value:"Hinweis zur Klasse JobOffer",id:"hinweis-zur-klasse-joboffer",level:2},{value:"Hinweis zur klasse JobOffers",id:"hinweis-zur-klasse-joboffers",level:2}],m={toc:p};function c(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse und/oder eine Testklasse."),(0,i.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/208895685-2ef6b600-b0a7-4c6d-956b-f6c29f4fbaf9.png",alt:"image"})),(0,i.kt)("h2",{id:"allgemeine-hinweise"},"Allgemeine Hinweise"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Aus Gr\xfcnden der \xdcbersicht werden im Klassendiagramm keine Getter und Object-Methoden dargestellt"),(0,i.kt)("li",{parentName:"ul"},"So nicht anders angegeben, sollen Konstruktoren, Setter, Getter sowie die Object-Methoden wie gewohnt implementiert werden")),(0,i.kt)("h2",{id:"hinweis-zur-klasse-applicant"},"Hinweis zur Klasse Applicant"),(0,i.kt)("p",null,"Die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"void addApplicationDocument(applicationDocument: ApplicationDocument)")," soll den Bewerbungsunterlagen (",(0,i.kt)("inlineCode",{parentName:"p"},"applicationDocuments"),") das eingehende Dokument hinzuf\xfcgen."),(0,i.kt)("h2",{id:"hinweis-zur-klasse-joboffer"},"Hinweis zur Klasse JobOffer"),(0,i.kt)("p",null,"Die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"void addApplicant(applicant: Applicant)")," soll der Bewerberliste (",(0,i.kt)("inlineCode",{parentName:"p"},"applicants"),") den eingehenden Bewerber hinzuf\xfcgen."),(0,i.kt)("h2",{id:"hinweis-zur-klasse-joboffers"},"Hinweis zur klasse JobOffers"),(0,i.kt)("p",null,"Die Methode ",(0,i.kt)("inlineCode",{parentName:"p"},"ArrayList<JobOffer> getJobOffers(file: File)")," soll die Stellenangebote der eingehenden Datei zur\xfcckgeben."))}c.isMDXComponent=!0}}]);