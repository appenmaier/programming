"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[454],{3905:(e,a,r)=>{r.d(a,{Zo:()=>c,kt:()=>p});var n=r(7294);function t(e,a,r){return a in e?Object.defineProperty(e,a,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[a]=r,e}function s(e,a){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var a=1;a<arguments.length;a++){var r=null!=arguments[a]?arguments[a]:{};a%2?s(Object(r),!0).forEach((function(a){t(e,a,r[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(r,a))}))}return e}function l(e,a){if(null==e)return{};var r,n,t=function(e,a){if(null==e)return{};var r,n,t={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],a.indexOf(r)>=0||(t[r]=e[r]);return t}(e,a);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],a.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var o=n.createContext({}),u=function(e){var a=n.useContext(o),r=a;return e&&(r="function"==typeof e?e(a):i(i({},a),e)),r},c=function(e){var a=u(e.components);return n.createElement(o.Provider,{value:a},e.children)},d={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},m=n.forwardRef((function(e,a){var r=e.components,t=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),p=t,g=m["".concat(o,".").concat(p)]||m[p]||d[p]||s;return r?n.createElement(g,i(i({ref:a},c),{},{components:r})):n.createElement(g,i({ref:a},c))}));function p(e,a){var r=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var s=r.length,i=new Array(s);i[0]=m;var l={};for(var o in a)hasOwnProperty.call(a,o)&&(l[o]=a[o]);l.originalType=e,l.mdxType="string"==typeof e?e:t,i[1]=l;for(var u=2;u<s;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3764:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var n=r(7462),t=(r(7294),r(3905));const s={title:"\xdcbungsaufgabe ClassDiagrams05"},i=void 0,l={unversionedId:"exercises/uml/class-diagrams05",id:"exercises/uml/class-diagrams05",title:"\xdcbungsaufgabe ClassDiagrams05",description:"- Erstelle die Aufz\xe4hlungen SkatCardColor und SkatCardValue sowie die Klassen SkatCard und SkatCardDeck anhand des abgebildeten Klassendiagramms",source:"@site/docs/exercises/uml/class-diagrams05.md",sourceDirName:"exercises/uml",slug:"/exercises/uml/class-diagrams05",permalink:"/programming/docs/exercises/uml/class-diagrams05",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/uml/class-diagrams05.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe ClassDiagrams05"},sidebar:"tutorialSidebar",previous:{title:"\xdcbungsaufgabe ClassDiagrams04",permalink:"/programming/docs/exercises/uml/class-diagrams04"},next:{title:"Polymorphie",permalink:"/programming/docs/exercises/polymorphie/"}},o={},u=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse SkatCardDeck",id:"hinweise-zur-klasse-skatcarddeck",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2},{value:"Hinweis",id:"hinweis",level:2}],c={toc:u};function d(e){let{components:a,...r}=e;return(0,t.kt)("wrapper",(0,n.Z)({},c,r,{components:a,mdxType:"MDXLayout"}),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Erstelle die Aufz\xe4hlungen ",(0,t.kt)("inlineCode",{parentName:"li"},"SkatCardColor")," und ",(0,t.kt)("inlineCode",{parentName:"li"},"SkatCardValue")," sowie die Klassen ",(0,t.kt)("inlineCode",{parentName:"li"},"SkatCard")," und ",(0,t.kt)("inlineCode",{parentName:"li"},"SkatCardDeck")," anhand des abgebildeten Klassendiagramms"),(0,t.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche ein Skatblatt erzeugt, mischt und auf der Konsole ausgibt")),(0,t.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,t.kt)("p",null,(0,t.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/177834439-8e42e2eb-f97c-4ad5-9c44-4f1dcf8dbddc.png",alt:"image"})),(0,t.kt)("h2",{id:"hinweise-zur-klasse-skatcarddeck"},"Hinweise zur Klasse SkatCardDeck"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Der Konstruktor soll ein Skatblatt, bestehend aus 32 Karten, erzeugen"),(0,t.kt)("li",{parentName:"ul"},"Die Methode ",(0,t.kt)("inlineCode",{parentName:"li"},"void shuffleSkatCards()")," soll das Skatblatt mischen")),(0,t.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-markdown"},"Kreuz K\xf6nig\nPik 10\nKreuz 9\nPik 9\nKreuz Bube\nPik Ass\nHerz Bube\nKaro Bube\nPik 8\nKaro Dame\n\u2026\n")),(0,t.kt)("h2",{id:"hinweis"},"Hinweis"),(0,t.kt)("p",null,"Die statische Methode ",(0,t.kt)("inlineCode",{parentName:"p"},"T[] values()")," einer Aufz\xe4hlung gibt alle Aufz\xe4hlungskonstanten der Aufz\xe4hlung als Feld zur\xfcck."))}d.isMDXComponent=!0}}]);