"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[5655],{5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),l=n(6010);const i="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,l.Z)(i,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7462),l=n(7294),i=n(6010),r=n(2389),s=n(7392),o=n(7094),u=n(2466);const c="tabList__CuJ",d="tabItem_LNqP";function m(e){var t;const{lazy:n,block:r,defaultValue:m,values:p,groupId:g,className:h}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=p??b.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),k=(0,s.l)(v,((e,t)=>e.value===t.value));if(k.length>0)throw new Error(`Docusaurus error: Duplicate values "${k.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==f&&!v.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:E,setTabGroupChoices:x}=(0,o.U)(),[w,N]=(0,l.useState)(f),Z=[],{blockElementScrollPositionUntilNextRender:C}=(0,u.o5)();if(null!=g){const e=E[g];null!=e&&e!==w&&v.some((t=>t.value===e))&&N(e)}const B=e=>{const t=e.currentTarget,n=Z.indexOf(t),a=v[n].value;a!==w&&(C(t),N(a),null!=g&&x(g,String(a)))},y=e=>{var t;let n=null;switch(e.key){case"ArrowRight":{const t=Z.indexOf(e.currentTarget)+1;n=Z[t]??Z[0];break}case"ArrowLeft":{const t=Z.indexOf(e.currentTarget)-1;n=Z[t]??Z[Z.length-1];break}}null==(t=n)||t.focus()};return l.createElement("div",{className:(0,i.Z)("tabs-container",c)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":r},h)},v.map((e=>{let{value:t,label:n,attributes:r}=e;return l.createElement("li",(0,a.Z)({role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,key:t,ref:e=>Z.push(e),onKeyDown:y,onFocus:B,onClick:B},r,{className:(0,i.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":w===t})}),n??t)}))),n?(0,l.cloneElement)(b.filter((e=>e.props.value===w))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})))))}function p(e){const t=(0,r.Z)();return l.createElement(m,(0,a.Z)({key:String(t)},e))}},7833:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),l=n(5488),i=n(5162),r=n(9960),s=n(814);function o(e){let{pullRequest:t,branchSuffix:n}=e;return a.createElement(l.Z,null,a.createElement(i.Z,{value:"exercise",label:"Exercise",default:!0},a.createElement(s.Z,{language:"console"},`git switch exercises/${n}`),a.createElement(r.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${n}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(i.Z,{value:"solution",label:"Solution"},a.createElement(s.Z,{language:"console"},`git switch solutions/${n}`),a.createElement(r.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${n}/Exercise.java`},a.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),a.createElement(i.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du in diesem"," ",a.createElement(r.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${t}/files?diff=split`},"PR#",t)))}},6158:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),l=(n(7294),n(3905)),i=n(7833);const r={title:"Generics 01"},s=void 0,o={unversionedId:"exercises/generics/generics01",id:"exercises/generics/generics01",title:"Generics 01",description:"- Erstelle die Klassen Bottle, BeerBottle, WineBottle und Crate anhand",source:"@site/docs/exercises/generics/generics01.md",sourceDirName:"exercises/generics",slug:"/exercises/generics/generics01",permalink:"/programming/exercises/generics/generics01",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/generics/generics01.md",tags:[],version:"current",frontMatter:{title:"Generics 01"},sidebar:"exercisesSidebar",previous:{title:"Generische Programmierung",permalink:"/programming/exercises/generics/"},next:{title:"Generics 02",permalink:"/programming/exercises/generics/generics02"}},u={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse BeerBottle",id:"hinweise-zur-klasse-beerbottle",level:2},{value:"Hinweise zur Klasse Crate",id:"hinweise-zur-klasse-crate",level:2}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Erstelle die Klassen ",(0,l.kt)("inlineCode",{parentName:"li"},"Bottle"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"BeerBottle"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"WineBottle")," und ",(0,l.kt)("inlineCode",{parentName:"li"},"Crate")," anhand\ndes abgebildeten Klassendiagramms"),(0,l.kt)("li",{parentName:"ul"},"Erstelle eine ausf\xfchrbare Klasse, welche eine Getr\xe4nkiste sowie mehrere\nFlaschen erzeugt und die Flaschen in die Getr\xe4nkekiste stellt")),(0,l.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/179726347-0d746c34-ca62-4624-baa6-f47f12a8d960.png",alt:"image"})),(0,l.kt)("h2",{id:"hinweise-zur-klasse-beerbottle"},"Hinweise zur Klasse BeerBottle"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void chugALug()"),' soll den Text "Ex und Hopp" auf der Konsole\nausgeben')),(0,l.kt)("h2",{id:"hinweise-zur-klasse-crate"},"Hinweise zur Klasse Crate"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"void insertBottle(Bottle, int)")," soll eine Flasche in eine der 6\nGetr\xe4nkef\xe4cher einf\xfcgen"),(0,l.kt)("li",{parentName:"ul"},"Die Methode ",(0,l.kt)("inlineCode",{parentName:"li"},"Bottle takeBottle(int)")," soll die Flasche des entsprechenden\nGetr\xe4nkefachs zur\xfcckgeben")),(0,l.kt)(i.Z,{pullRequest:"52",branchSuffix:"generics/01",mdxType:"Exercise"}))}m.isMDXComponent=!0}}]);