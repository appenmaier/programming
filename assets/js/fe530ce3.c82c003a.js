"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[3778],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>d});var i=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function n(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);r&&(i=i.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,i)}return t}function l(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?n(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):n(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function o(e,r){if(null==e)return{};var t,i,a=function(e,r){if(null==e)return{};var t,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)t=n[i],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=i.createContext({}),m=function(e){var r=i.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):l(l({},r),e)),t},p=function(e){var r=m(e.components);return i.createElement(s.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return i.createElement(i.Fragment,{},r)}},u=i.forwardRef((function(e,r){var t=e.components,a=e.mdxType,n=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=m(t),d=a,g=u["".concat(s,".").concat(d)]||u[d]||c[d]||n;return t?i.createElement(g,l(l({ref:r},p),{},{components:t})):i.createElement(g,l({ref:r},p))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var n=t.length,l=new Array(n);l[0]=u;var o={};for(var s in r)hasOwnProperty.call(r,s)&&(o[s]=r[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var m=2;m<n;m++)l[m]=t[m];return i.createElement.apply(null,l)}return i.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2556:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>n,metadata:()=>o,toc:()=>m});var i=t(7462),a=(t(7294),t(3905));const n={title:"Bibliothek",description:"",tags:["inheritance","polymorphy","exceptions","records","maps"]},l=void 0,o={unversionedId:"additional-material/exam-exercises2/library",id:"additional-material/exam-exercises2/library",title:"Bibliothek",description:"",source:"@site/docs/additional-material/exam-exercises2/library.md",sourceDirName:"additional-material/exam-exercises2",slug:"/additional-material/exam-exercises2/library",permalink:"/programming/additional-material/exam-exercises2/library",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/additional-material/exam-exercises2/library.md",tags:[{label:"inheritance",permalink:"/programming/tags/inheritance"},{label:"polymorphy",permalink:"/programming/tags/polymorphy"},{label:"exceptions",permalink:"/programming/tags/exceptions"},{label:"records",permalink:"/programming/tags/records"},{label:"maps",permalink:"/programming/tags/maps"}],version:"current",frontMatter:{title:"Bibliothek",description:"",tags:["inheritance","polymorphy","exceptions","records","maps"]},sidebar:"additionalMaterialSidebar",previous:{title:"Lego-Baustein",permalink:"/programming/additional-material/exam-exercises2/lego-brick"},next:{title:"Messdaten",permalink:"/programming/additional-material/exam-exercises2/measurement-data"}},s={},m=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse Book",id:"hinweis-zur-klasse-book",level:2},{value:"Hinweise zur Klasse Library",id:"hinweise-zur-klasse-library",level:2},{value:"Hinweis",id:"hinweis",level:2}],p={toc:m};function c(e){let{components:r,...t}=e;return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Setze das abgebildete Klassendiagramm vollst\xe4ndig um. Erstelle zum Testen eine ausf\xfchrbare Klasse und/oder eine Testklasse."),(0,a.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/208609983-16b5d669-5eab-4425-8429-e2e491eec021.png",alt:"image"})),(0,a.kt)("h2",{id:"hinweis-zur-klasse-book"},"Hinweis zur Klasse Book"),(0,a.kt)("p",null,"Der Konstruktor soll alle Attribute initialisieren."),(0,a.kt)("h2",{id:"hinweise-zur-klasse-library"},"Hinweise zur Klasse Library"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"void addBook(book: Book)")," soll der B\xfccherliste (",(0,a.kt)("inlineCode",{parentName:"li"},"books"),") das eingehende Buch hinzuf\xfcgen"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"Book getBookByTitle(title: String)")," soll das Buch zum eingehenden Titel zuur\xfcckgeben"),(0,a.kt)("li",{parentName:"ul"},"Die Methode ",(0,a.kt)("inlineCode",{parentName:"li"},"ArrayList<PaperBook> getPaperBooksByStatus(status: Status)")," soll alle gedruckten B\xfccher zum eingehenden Status zur\xfcckgeben")),(0,a.kt)("h2",{id:"hinweis"},"Hinweis"),(0,a.kt)("p",null,"Die statische Methode ",(0,a.kt)("inlineCode",{parentName:"p"},"UUID randomUUID()")," der Klasse ",(0,a.kt)("inlineCode",{parentName:"p"},"UUID")," gibt eine zuf\xe4llig erstellte UUID zur\xfcck."))}c.isMDXComponent=!0}}]);