"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[5864],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=s(t),m=i,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||l;return t?r.createElement(f,a(a({ref:n},u),{},{components:t})):r.createElement(f,a({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=d;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},7165:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const l={title:"Schleifen",description:"",sidebar_position:20,tags:["control-structures","loops"]},a=void 0,o={unversionedId:"documentation/control-structures/loops",id:"documentation/control-structures/loops",title:"Schleifen",description:"",source:"@site/docs/documentation/control-structures/loops.md",sourceDirName:"documentation/control-structures",slug:"/documentation/control-structures/loops",permalink:"/programming/documentation/control-structures/loops",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/documentation/control-structures/loops.md",tags:[{label:"control-structures",permalink:"/programming/tags/control-structures"},{label:"loops",permalink:"/programming/tags/loops"}],version:"current",sidebarPosition:20,frontMatter:{title:"Schleifen",description:"",sidebar_position:20,tags:["control-structures","loops"]},sidebar:"documentationSidebar",previous:{title:"Verzweigungen",permalink:"/programming/documentation/control-structures/cases"},next:{title:"Felder (Arrays)",permalink:"/programming/documentation/arrays"}},c={},s=[{value:"while-Schleifen",id:"while-schleifen",level:2},{value:"do/while-Schleifen",id:"dowhile-schleifen",level:2},{value:"for-Schleifen",id:"for-schleifen",level:2},{value:"for-each-Schleifen",id:"for-each-schleifen",level:2},{value:"Schleifensteuerung",id:"schleifensteuerung",level:2}],u={toc:s};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Schleifen sind eine von zwei M\xf6glichkeiten, Anweisungsbl\xf6cke wiederholt auszuf\xfchren. Die zweite M\xf6glichkeit sind Selbstaufrufe in Form rekursiver Methoden."),(0,i.kt)("h2",{id:"while-schleifen"},"while-Schleifen"),(0,i.kt)("p",null,"Bei der while-Schleife wird eine bestimmte Anweisungsfolge (Schleifenrumpf) wiederholt, solange eine bestimmte Bedingung (Schleifenbedingung) wahr ist. Da zu Beginn der Schleife die Bedingung gepr\xfcft wird, spricht man auch von einer ",(0,i.kt)("strong",{parentName:"p"},"kopfgesteuerten Schleife"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class MainClass {\n\n    public static void main(String[] args) {\n        int i = 0;\n        while (i < 10) {\n            System.out.println(i);\n            i++;\n        }\xa0\n    }\n\n}\n")),(0,i.kt)("h2",{id:"dowhile-schleifen"},"do/while-Schleifen"),(0,i.kt)("p",null,"Im Gegensatz zur while-Schleife wird bei der do/while-Schleife der Schleifenrumpf immer mindestens einmal durchlaufen. Da die Bedingung hier am Ende der Schleife gepr\xfcft wird, spricht man hier von einer ",(0,i.kt)("strong",{parentName:"p"},"fu\xdfgesteuerten Schleife"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class MainClass {\n\n    public static void main(String[] args) {\n        int i = 0;\n        do {\n            System.out.println(i);\n            i++;\n        } while (i < 10);\n\xa0   }\n\n}\n")),(0,i.kt)("h2",{id:"for-schleifen"},"for-Schleifen"),(0,i.kt)("p",null,"Bei der for-Schleife handelt es sich um eine indexgesteuerte Schleife, auch ",(0,i.kt)("strong",{parentName:"p"},"Z\xe4hlschleife")," genannt. Durch den Index wird bereits zu Schleifenbeginn festgelegt, wie oft die Schleife durchlaufen wird."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class MainClass {\n\n    public static void main(String[] args) {\n        for (int i = 0; i < 10; i++) {\n            System.out.println(i);\n        }\n    }\n\n}\n")),(0,i.kt)("h2",{id:"for-each-schleifen"},"for-each-Schleifen"),(0,i.kt)("p",null,"Mit Hilfe der for-each-Schleife k\xf6nnen Datensammlungen wie z.B. ",(0,i.kt)("a",{parentName:"p",href:"/programming/documentation/arrays"},"Felder")," und ",(0,i.kt)("a",{parentName:"p",href:"/programming/documentation/lists"},"Listen")," elementweise durchlaufen werden. Allerdings k\xf6nnen die Elemente einer Datensammlung nur ge\xe4ndert werden, nicht jedoch die\nDatensammlung selbst."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class MainClass {\n\n    public static void main(String[] args) {\n        int[] ids = { 4, 8, 15, 16, 23, 42 };\n        for (int i : ids) {\n            System.out.println(i);\n        }\n    }\n\n}\n")),(0,i.kt)("h2",{id:"schleifensteuerung"},"Schleifensteuerung"),(0,i.kt)("p",null,"Die Anweisung ",(0,i.kt)("inlineCode",{parentName:"p"},"break")," sorgt daf\xfcr, dass eine Schleife ungeachtet der Bedingung komplett verlassen wird. Mit der Anweisung ",(0,i.kt)("inlineCode",{parentName:"p"},"continue")," wird der aktuelle Schleifendurchgang abgebrochen und die Schleife wird mit dem n\xe4chsten Durchlauf fortgef\xfchrt."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"public class MainClass {\n\n    public static void main(String[] args) {\n        for (int i = 0; i < 10; i++) {\n            if (i == 6) {\n                break;\n            }\n            if (i % 2 == 0) {\n                continue;\n            }\n            System.out.println(i);\n        }\n    }\n\n}\n")))}p.isMDXComponent=!0}}]);