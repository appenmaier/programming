"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[4501],{3905:(e,r,t)=>{t.d(r,{Zo:()=>p,kt:()=>d});var a=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=a.createContext({}),c=function(e){var r=a.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},p=function(e){var r=c(e.components);return a.createElement(l.Provider,{value:r},e.children)},m={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},u=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),d=n,g=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return t?a.createElement(g,i(i({ref:r},p),{},{components:t})):a.createElement(g,i({ref:r},p))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=u;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6836:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=t(7462),n=(t(7294),t(3905));const o={title:"\xdcbungsaufgabe Comparators02"},i=void 0,s={unversionedId:"exercises/comparators/comparators02",id:"exercises/comparators/comparators02",title:"\xdcbungsaufgabe Comparators02",description:"- Erstelle die Klasse CoordinateComparator anhand des abgebildeten Klassendiagramms",source:"@site/docs/exercises/comparators/comparators02.md",sourceDirName:"exercises/comparators",slug:"/exercises/comparators/comparators02",permalink:"/programming/docs/exercises/comparators/comparators02",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/comparators/comparators02.md",tags:[],version:"current",frontMatter:{title:"\xdcbungsaufgabe Comparators02"},sidebar:"tutorialSidebar",previous:{title:"\xdcbungsaufgabe Comparators01",permalink:"/programming/docs/exercises/comparators/comparators01"},next:{title:"Ausnahmen (Exceptions)",permalink:"/programming/docs/exercises/exceptions/"}},l={},c=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweis zur Klasse CoordinateComparator",id:"hinweis-zur-klasse-coordinatecomparator",level:2}],p={toc:c};function m(e){let{components:r,...t}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Erstelle die Klasse ",(0,n.kt)("inlineCode",{parentName:"li"},"CoordinateComparator")," anhand des abgebildeten Klassendiagramms"),(0,n.kt)("li",{parentName:"ul"},"Passe die ausf\xfchrbare Klasse aus \xdcbungsaufgabe ",(0,n.kt)("a",{parentName:"li",href:"/programming/docs/exercises/comparators/comparators01"},"Comparators01")," so an, dass die Koordinatenliste mit Hilfe der Klasse ",(0,n.kt)("inlineCode",{parentName:"li"},"CoordinateComparator")," sortiert wird")),(0,n.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/179708340-78b63f31-6a3f-4790-9bbb-d60af5cd01a7.png",alt:"image"})),(0,n.kt)("h2",{id:"hinweis-zur-klasse-coordinatecomparator"},"Hinweis zur Klasse CoordinateComparator"),(0,n.kt)("p",null,"Die Methode ",(0,n.kt)("inlineCode",{parentName:"p"},"int compare(Coordinate, Coordinate)")," soll zwei eingehende Koordinaten anhand ihrer jeweiligen Distanz zum Nullpunkt vergleichen. Ist die Distanz der ersten Koordinate zum Nullpunkt kleiner als bzw. gr\xf6\xdfer als bzw. gleich die der zweiten Koordinate,\nsoll der Wert -1 bzw. 1 bzw. 0 zur\xfcckgegeben werden."))}m.isMDXComponent=!0}}]);