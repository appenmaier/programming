"use strict";(self.webpackChunkprogrammierung=self.webpackChunkprogrammierung||[]).push([[9355],{5162:(e,t,a)=>{a.d(t,{Z:()=>s});var l=a(7294),n=a(6010);const r="tabItem_Ymn6";function s(e){let{children:t,hidden:a,className:s}=e;return l.createElement("div",{role:"tabpanel",className:(0,n.Z)(r,s),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>d});var l=a(7462),n=a(7294),r=a(6010),s=a(2389),i=a(7392),o=a(7094),u=a(2466);const p="tabList__CuJ",c="tabItem_LNqP";function m(e){var t;const{lazy:a,block:s,defaultValue:m,values:d,groupId:h,className:g}=e,b=n.Children.map(e.children,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),k=d??b.map((e=>{let{props:{value:t,label:a,attributes:l}}=e;return{value:t,label:a,attributes:l}})),v=(0,i.l)(k,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===m?m:m??(null==(t=b.find((e=>e.props.default)))?void 0:t.props.value)??b[0].props.value;if(null!==f&&!k.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${k.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:N}=(0,o.U)(),[x,E]=(0,n.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=h){const e=y[h];null!=e&&e!==x&&k.some((t=>t.value===e))&&E(e)}const z=e=>{const t=e.currentTarget,a=w.indexOf(t),l=k[a].value;l!==x&&(T(t),E(l),null!=h&&N(h,String(l)))},Z=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=w.indexOf(e.currentTarget)+1;a=w[t]??w[0];break}case"ArrowLeft":{const t=w.indexOf(e.currentTarget)-1;a=w[t]??w[w.length-1];break}}null==(t=a)||t.focus()};return n.createElement("div",{className:(0,r.Z)("tabs-container",p)},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":s},g)},k.map((e=>{let{value:t,label:a,attributes:s}=e;return n.createElement("li",(0,l.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>w.push(e),onKeyDown:Z,onFocus:z,onClick:z},s,{className:(0,r.Z)("tabs__item",c,null==s?void 0:s.className,{"tabs__item--active":x===t})}),a??t)}))),a?(0,n.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):n.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function d(e){const t=(0,s.Z)();return n.createElement(m,(0,l.Z)({key:String(t)},e))}},7833:(e,t,a)=>{a.d(t,{Z:()=>o});var l=a(7294),n=a(5488),r=a(5162),s=a(9960),i=a(814);function o(e){let{pullRequest:t,branchSuffix:a}=e;return l.createElement(n.Z,null,l.createElement(r.Z,{value:"exercise",label:"Exercise",default:!0},l.createElement(i.Z,{language:"console"},`git switch exercises/${a}`),l.createElement(s.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/exercises/${a}/Exercise.java`},l.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),l.createElement(r.Z,{value:"solution",label:"Solution"},l.createElement(i.Z,{language:"console"},`git switch solutions/${a}`),l.createElement(s.Z,{to:`https://gitpod.io/#https://github.com/jappuccini/java-exercises/blob/solutions/${a}/Exercise.java`},l.createElement("img",{alt:"Open in Gitpod",src:"https://gitpod.io/button/open-in-gitpod.svg"}))),l.createElement(r.Z,{value:"pullrequest",label:"Pull Request"},"Alle \xa0\xc4nderungen zwischen der Aufgabe und der L\xf6sung findest du im Pull Request "," ",l.createElement(s.Z,{to:`https://github.com/jappuccini/java-exercises/pull/${t}/files?diff=split`},"PR#",t)))}},6763:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>p});var l=a(7462),n=(a(7294),a(3905)),r=a(7833);const s={title:"Polymorphy 01"},i=void 0,o={unversionedId:"exercises/polymorphy/polymorphy01",id:"exercises/polymorphy/polymorphy01",title:"Polymorphy 01",description:"- Passe die Klasse Vehicle aus \xdcbungsaufgabe",source:"@site/docs/exercises/polymorphy/polymorphy01.md",sourceDirName:"exercises/polymorphy",slug:"/exercises/polymorphy/polymorphy01",permalink:"/programming/exercises/polymorphy/polymorphy01",draft:!1,editUrl:"https://github.com/appenmaier/programming/tree/main/docs/exercises/polymorphy/polymorphy01.md",tags:[],version:"current",frontMatter:{title:"Polymorphy 01"},sidebar:"exercisesSidebar",previous:{title:"Polymorphie",permalink:"/programming/exercises/polymorphy/"},next:{title:"Polymorphy 02",permalink:"/programming/exercises/polymorphy/polymorphy02"}},u={},p=[{value:"Klassendiagramm",id:"klassendiagramm",level:2},{value:"Hinweise zur Klasse Car",id:"hinweise-zur-klasse-car",level:2},{value:"Hinweise zur Klasse Truck",id:"hinweise-zur-klasse-truck",level:2},{value:"Konsolenausgabe",id:"konsolenausgabe",level:2}],c={toc:p};function m(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,l.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Passe die Klasse ",(0,n.kt)("inlineCode",{parentName:"li"},"Vehicle")," aus \xdcbungsaufgabe\n",(0,n.kt)("a",{parentName:"li",href:"/programming/exercises/enumerations/enumerations01"},"Enumerations01")," anhand des abgebildeten\nKlassendiagramms an und erstelle die Klassen ",(0,n.kt)("inlineCode",{parentName:"li"},"Car")," und ",(0,n.kt)("inlineCode",{parentName:"li"},"Truck")),(0,n.kt)("li",{parentName:"ul"},"Passe die ausf\xfchrbare Klasse aus \xdcbungsaufgabe\n",(0,n.kt)("a",{parentName:"li",href:"/programming/exercises/enumerations/enumerations01"},"Enumerations01")," so an, dass keine\nFahrzeuge, sondern Autos und Lastwagen erzeugt und ausgegeben werden")),(0,n.kt)("h2",{id:"klassendiagramm"},"Klassendiagramm"),(0,n.kt)("p",null,(0,n.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/47243617/170883749-a72e4bd8-4059-432e-a648-f5f6bdbfc6ef.png",alt:"image"})),(0,n.kt)("h2",{id:"hinweise-zur-klasse-car"},"Hinweise zur Klasse Car"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"void doATurboBoost()")," soll die Geschwindigkeit verdoppeln"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,n.kt)("h2",{id:"hinweise-zur-klasse-truck"},"Hinweise zur Klasse Truck"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Der Konstruktor soll alle Attribute initialisieren"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"void transform()")," soll das Attribut isTransformed invertieren"),(0,n.kt)("li",{parentName:"ul"},"Die Methode ",(0,n.kt)("inlineCode",{parentName:"li"},"void print()")," soll alle Attribute auf der Konsole ausgeben")),(0,n.kt)("h2",{id:"konsolenausgabe"},"Konsolenausgabe"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-console"},"Anzahl Fahrzeuge: 0\nAnzahl Fahrzeuge: 3\nPorsche 911 (Elektro, 2 Sitzpl\xe4tze)\nMAN TGX (Diesel, 20t)\nOpel Zafira Life (Diesel, 7 Sitzpl\xe4tze)\nPorsche 911 beschleunigt auf 50 km/h\nMAN TGX verwandelt sich in einen Autobot\nPorsche 911 macht einen TurboBoost und beschleunigt auf 100 km/h\nMAN TGX verwandelt sich in einen Lastwagen zur\xfcck\n")),(0,n.kt)(r.Z,{pullRequest:"41",branchSuffix:"polymorphy/01",mdxType:"Exercise"}))}m.isMDXComponent=!0}}]);